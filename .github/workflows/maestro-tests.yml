name: Run Maestro UI Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ui-tests:
    runs-on: macos-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Install dependencies and Maestro
    - name: Install dependencies and Maestro
      run: |
        export MAESTRO_VERSION=1.39.0
        curl -Ls "https://get.maestro.mobile.dev" | bash
        arch -arm64 brew tap facebook/fb
        arch -arm64 brew install facebook/fb/idb-companion
        arch -arm64 brew install jq

    # Step 3: Set up JDK 11 (required by Maestro)
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    # Step 4: Start iOS Simulator
    - name: Start iOS Simulator
      run: |
        # Find a simulator by name (e.g., iPhone 15)
        DEVICE_ID=$(xcrun simctl list devices available --json | jq -r '.devices[] | .[] | select(.name == "iPhone 15") | .udid' | head -n 1)
        DEVICE_STATE=$(xcrun simctl list devices available --json | jq -r --arg DEVICE_ID "$DEVICE_ID" '.devices[] | .[] | select(.udid == $DEVICE_ID) | .state')

        if [ -z "$DEVICE_ID" ]; then
          echo "No available simulator found for the criteria."
          exit 1
        fi

        echo "DEVICE_ID=$DEVICE_ID" >> $GITHUB_ENV

        if [ "$DEVICE_STATE" != "Booted" ]; then
          # Boot the simulator if it's not already booted
          xcrun simctl boot "$DEVICE_ID"
          # Wait a bit for the simulator to boot
          sleep 30
        else
          echo "Simulator with DEVICE_ID=$DEVICE_ID is already booted."
        fi

    # Step 5: Run Maestro UI tests
    - name: Run Maestro UI tests
      run: |
        export PATH="$PATH:$HOME/.maestro/bin"
        # Install the app on the simulator
        xcrun simctl install $DEVICE_ID Wikipedia.app
        # Run Maestro UI tests
        maestro --device $DEVICE_ID test ios-advanced-flow.yaml
