name: Run Maestro Android E2E Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  MAESTRO_VERSION: 1.39.0

jobs:
  run_android_e2e:
    timeout-minutes: 30
    runs-on: macos-latest

    strategy:
      fail-fast: false
      matrix:
        api-level: [30, 31, 32]  # API levels for the Android emulator
        target: [default, google_apis]
        arch: [x86_64]  # x86_64 architecture for emulator support

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      # Step 2: Install dependencies (Java, Maestro, Android SDK)
      - name: Install dependencies
        run: |
          export MAESTRO_VERSION=1.39.0
          curl -Ls "https://get.maestro.mobile.dev" | bash
          brew install --cask android-sdk
          echo "export ANDROID_HOME=$HOME/Library/Android/sdk" >> $GITHUB_ENV
          echo "export PATH=$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools:$PATH" >> $GITHUB_ENV
          yes | sdkmanager --licenses
          sdkmanager "system-images;android-30;google_apis;x86_64"
          sdkmanager "platform-tools" "emulator"

      # Step 3: Start the Android Emulator
      - name: Start Android Emulator
        run: |
          emulator -list-avds || echo "No AVD found, creating one..."
          echo "no" | avdmanager create avd --force --name test-avd --package "system-images;android-30;google_apis;x86_64" --device "pixel"
          nohup emulator -avd test-avd -no-skin -no-audio -no-window -gpu swiftshader_indirect &
          adb wait-for-device
          adb shell input keyevent 82  # Unlock the emulator

      # Step 4: Install APK on Emulator
      - name: Install APK
        run: |
          adb install -r ./wikipedia.apk

      # Step 5: Run Maestro E2E tests
      - name: Run Maestro E2E tests
        run: |
          export PATH="$PATH:$HOME/.maestro/bin"
          # Run Maestro E2E tests without specifying the device ID
          maestro test android-advanced-flow.yaml

      # Step 6: Upload test results (screenshots, videos, etc.)
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Android E2E Test Results
          path: |
            ${{ github.workspace }}/*.mp4
            ${{ github.workspace }}/*.png
            ${{ github.workspace }}/report*.xml
            ~/.maestro/tests/**/*
